package com.example.camera;

import java.io.IOException;
import android.content.Context;
import android.graphics.PixelFormat;
import android.hardware.Camera;
import android.hardware.Camera.PictureCallback;
import android.hardware.Camera.ShutterCallback;
import android.util.Log;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
public class MySurfaceView extends SurfaceView implements 
SurfaceHolder.Callback{
SurfaceHolder holder;
Camera myCamera;
private ShutterCallback shutter = new ShutterCallback() {
@Override
public void onShutter() {
// TODO Auto-generated method stub
Log.d("ddd", "shutter");
}
};
private PictureCallback raw = new PictureCallback() {
@Override
public void onPictureTaken(byte[] data, Camera camera) {
// TODO Auto-generated method stub
Log.d("ddd", "raw");
}
};
private PictureCallback jpeg = new PictureCallback() {
@Override
public void onPictureTaken(byte[] data, Camera camera) {
// TODO Auto-generated method stub
Log.d("ddd","jpeg");
}
};
public MySurfaceView(Context context)
{
super(context);
holder = getHolder();//获得surfaceHolder引用
holder.addCallback(this);
holder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);//设置类型
}
public void tackPicture()
{
myCamera.takePicture(null,null,null);
}
public void voerTack()
{
myCamera.startPreview();
}
@Override
public void surfaceChanged(SurfaceHolder holder, int format, int width,
int height) {
myCamera.startPreview();
}
@Override
public void surfaceCreated(SurfaceHolder holder) {
// TODO Auto-generated method stub
if(myCamera == null)
{
myCamera = Camera.open();//开启相机,不能放在构造函数中，不然不会显示画面.
try {
myCamera.setPreviewDisplay(holder);
} catch (IOException e) {
// TODO Auto-generated catch block
e.printStackTrace();
}
}
}
@Override
public void surfaceDestroyed(SurfaceHolder holder) {
// TODO Auto-generated method stub
myCamera.stopPreview();//停止预览
myCamera.release();//释放相机资源
myCamera = null;
}
}