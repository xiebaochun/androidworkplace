package com.example.draganddrop;

import java.util.ArrayList;
import java.util.List;

import org.cocos2d.menus.CCMenu;
import org.cocos2d.menus.CCMenuItemImage;
import org.cocos2d.nodes.CCNode;
import org.cocos2d.types.CGPoint;


public class Card extends CCNode{
	 CCMenuItemImage sprite;
	 CCMenu menu;
     int touchCount=0;
     Boolean isTouched=false;
     public int textTureWidth;
 	public int textTureHeight;
 	public float fixSizeRate=1;
 	public Rectangle collisionRect;
     public Card(String filePath,Boolean isVisible,CGPoint position)
     {
    	 //super( filePath,isVisible, position,-4);
    	 sprite=CCMenuItemImage.item(filePath, filePath,CommonItem.gameLayer, "clickCallback");
    	 this.textTureWidth=(int)sprite.getContentSize().width;
 		 this.textTureHeight=(int)sprite.getContentSize().height;
 		this.sprite.setScaleY(CommonItem.SIZE_RATE_Y*fixSizeRate);
		this.sprite.setScaleX(CommonItem.SIZE_RATE_X*fixSizeRate);
 		sprite.setContentSize(sprite.getContentSize().width  , sprite.getContentSize().height);
    	 
    	 menu= CCMenu.menu() ;
    	 menu.setContentSize(sprite.getContentSize()) ;
    	 menu.setPosition(0,0);
		 menu.addChild(sprite,1,1);
		 
		this.setContentSize(sprite.getContentSize());
		this.addChild(menu,1,1);
		this.setPosition(position.x*CommonItem.SIZE_RATE_X, position.y*CommonItem.SIZE_RATE_Y);
		this.setVisible(isVisible);
		this.collisionRect=new Rectangle(this.getPosition().x,this.getPosition().y,this.textTureWidth*CommonItem.SIZE_RATE_X*fixSizeRate,this.textTureHeight*CommonItem.SIZE_RATE_X*fixSizeRate);
		CommonItem.gameLayer.addChild(sprite,-3);
     }
     public void clickCallback(Object sender)
     {
    	 touchCount++;
			if(touchCount%2==1)
				{
				isTouched=true;
				fixedSizeRate(0.6f);
				}
			else
			{
				isTouched=false;
				fixedSizeRate(CommonItem.fixedSizeRate);
				touchCount=0;
			}
     }
     public void fixedSizeRate(float rate) {
 		fixSizeRate=rate;
 		this.sprite.setScaleY(CommonItem.SIZE_RATE_Y*fixSizeRate);
 		this.sprite.setScaleX(CommonItem.SIZE_RATE_X*fixSizeRate);
 		this.collisionRect=new Rectangle(this.getPosition().x,this.getPosition().y,this.textTureWidth*CommonItem.SIZE_RATE_X*fixSizeRate,this.textTureHeight*CommonItem.SIZE_RATE_X*fixSizeRate);
     }
     public void collisionRectUpdate()
 	{
 		this.collisionRect=new Rectangle(this.getPosition().x,this.getPosition().y,this.textTureWidth*CommonItem.SIZE_RATE_X*fixSizeRate,this.textTureHeight*CommonItem.SIZE_RATE_X*fixSizeRate);
 	   
 	}
}
